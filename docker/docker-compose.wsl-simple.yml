# =============================================================================
# CORTEX MEMORY MCP - SIMPLIFIED WSL DOCKER DEPLOYMENT
# =============================================================================
# ARCHITECTURE: Windows MCP Server + WSL2 Docker PostgreSQL
# - MCP Server runs natively on Windows (optimal performance)
# - PostgreSQL runs in WSL2 Docker container (resource efficient)
# - Connection: Windows host ‚Üí WSL2 Docker ‚Üí PostgreSQL
# - Memory usage: ~800MB total (vs 3-5GB for Docker Desktop)
# - Performance: 5-10ms latency (excellent for MCP workloads)

# ‚ö†Ô∏è DOCKER COMPOSE CONFIGURATION RESTRICTIONS ‚ö†Ô∏è
# üî¥ FORBIDDEN: Do NOT change any configuration without explicit approval:
version: '3.8'

services:
      # PostgreSQL Performance Tuning (WSL2 Optimized)
      POSTGRES_SHARED_PRELOAD_LIBRARIES: pgcrypto,pg_trgm
      POSTGRES_MAX_CONNECTIONS: 100
      POSTGRES_SHARED_BUFFERS: 256MB
      POSTGRES_EFFECTIVE_CACHE_SIZE: 768MB
      POSTGRES_MAINTENANCE_WORK_MEM: 64MB
      POSTGRES_CHECKPOINT_COMPLETION_TARGET: 0.9
      POSTGRES_WAL_BUFFERS: 16MB
      POSTGRES_DEFAULT_STATISTICS_TARGET: 100

      # Performance Monitoring
      PGSTATS_STATEMENTS_TIMEOUT: 30s

    ports:
      # Expose to Windows host (localhost:5433)
      - "5433:5432"

    volumes:
      # PostgreSQL Data Volume
      - cortex_data:/var/lib/postgresql/data

      # Database Schema and Extensions (if they exist)
      - ../migrations:/docker-entrypoint-initdb.d:ro

    restart: unless-stopped

    # Health Checks (WSL2 Optimized)
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cortex -d cortex_prod -t 5"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

    # Resource Limits (WSL2 Optimized)
    deploy:
      resources:
        limits:
          memory: 1G          # Conservative memory limit
          cpus: '1.5'        # CPU limit for WSL2
        reservations:
          memory: 512M       # Memory reservation
          cpus: '0.5'        # CPU reservation

    # WSL2 Specific Optimizations
    shm_size: 128m             # Shared memory for PostgreSQL
    read_only: false
    stdin_open: true
    tty: true

    # Networking
    networks:
      - cortex_network

    # Logging (WSL2 Optimized)
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "cortex,postgres,wsl"

    # Security
    security_opt:
      - no-new-privileges:true

    # Environment Labels
    labels:
      - "cortex.component=database"
      - "cortex.environment=wsl"
      - "cortex.version=1.0.0"
      - "deployment.type=wsl"

# Docker Networks
networks:
  cortex_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1
    labels:
      - "cortex.network=wsl"

# Docker Volumes
volumes:
  cortex_data:
    driver: local
    labels:
      - "cortex.volume=database"
      - "cortex.environment=wsl"