# ============================================================================
# PROMETHEUS CONFIGURATION - CORTEX MEMORY MCP MONITORING
# ============================================================================
# Comprehensive monitoring for dual database setup (PostgreSQL + Qdrant)

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'cortex-mcp'
    environment: '${ENVIRONMENT:-development}'

# Rule files
rule_files:
  - "rules/*.yml"

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 5s
    metrics_path: /metrics

  # Node Exporter - System Metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets:
        - 'postgres-exporter:9100'
        - 'qdrant-exporter:9100'
        - 'cortex-app-exporter:9100'
    scrape_interval: 10s
    metrics_path: /metrics

  # PostgreSQL Database Metrics
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 15s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'postgres-primary'

  # Qdrant Vector Database Metrics
  - job_name: 'qdrant'
    static_configs:
      - targets: ['qdrant:6333']
    scrape_interval: 15s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'qdrant-primary'

  # Cortex Application Metrics
  - job_name: 'cortex-app'
    static_configs:
      - targets: ['cortex-app:3000']
    scrape_interval: 10s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'cortex-app'

  # Redis Cache Metrics
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 10s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'redis-primary'

  # Nginx Load Balancer Metrics
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 10s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'nginx-lb'

  # Kubernetes API Server (for K8s deployments)
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
      - role: endpoints
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

  # Kubernetes Nodes
  - job_name: 'kubernetes-nodes'
    kubernetes_sd_configs:
      - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)

  # Kubernetes Pods
  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
      - role: pod
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

  # Docker Container Metrics (for local development)
  - job_name: 'docker-containers'
    static_configs:
      - targets: ['docker-exporter:9323']
    scrape_interval: 10s
    metrics_path: /metrics

  # Application-specific custom metrics
  - job_name: 'cortex-custom-metrics'
    static_configs:
      - targets: ['cortex-app:3000']
    scrape_interval: 5s
    metrics_path: /metrics/custom
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'cortex-mcp'

# Remote write configuration (optional - for long-term storage)
remote_write:
  - url: "https://prometheus-remote-write.example.com/api/v1/write"
    basic_auth:
      username: "prometheus"
      password: "prometheus-password"
    queue_config:
      max_samples_per_send: 1000
      max_shards: 200
      capacity: 2500
    send_timeout: 30s

# Storage configuration
storage:
  tsdb:
    path: /prometheus
    retention.time: 15d
    retention.size: 10GB
    wal-compression: true

# Feature flags
features:
  - enable-native-histograms
  - extra-scrape-metrics
  - expanded-exemplars

# Configuration for remote read (optional)
remote_read:
  - url: "https://prometheus-remote-read.example.com/api/v1/read"
    read_recent: true
    basic_auth:
      username: "prometheus"
      password: "prometheus-password"