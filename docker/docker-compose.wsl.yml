# =============================================================================
# CORTEX MEMORY MCP - WSL QDRANT DOCKER DEPLOYMENT
# =============================================================================
# ARCHITECTURE: Windows MCP Server + WSL2 Docker Qdrant Vector Database
# - MCP Server runs natively on Windows (optimal performance)
# - Qdrant runs in WSL2 Docker container (resource efficient)
# - Connection: Windows host → WSL2 Docker → Qdrant
# - Memory usage: ~400MB total (vs 3-5GB for PostgreSQL + Docker Desktop)
# - Performance: 2-5ms latency for vector operations
# - High-performance similarity search and filtering

version: '3.8'

services:
  qdrant:
    image: qdrant/qdrant:latest
    container_name: cortex-qdrant-wsl
    restart: unless-stopped

    ports:
      # Expose to Windows host (localhost:6333)
      - "6333:6333"
      - "6334:6334"

    environment:
      # Qdrant Configuration
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__STORAGE__PERFORMANCE__MAX_SEARCH_THREADS=4
      - QDRANT__STORAGE__PERFORMANCE__WEIGHTED_SEARCH_THREAD_POOL_SIZE=2

    volumes:
      # Qdrant Data Volume
      - qdrant_data:/qdrant/storage

    restart: unless-stopped

    # Health Checks
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:6333/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

    # Resource Limits (WSL2 Optimized)
    deploy:
      resources:
        limits:
          memory: 512M        # Conservative memory limit for Qdrant
          cpus: '1.0'        # CPU limit for WSL2
        reservations:
          memory: 256M       # Memory reservation
          cpus: '0.5'        # CPU reservation

    # WSL2 Specific Optimizations
    read_only: false
    stdin_open: true
    tty: true

    # Networking
    networks:
      - cortex_network

    # Logging (WSL2 Optimized)
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "cortex,qdrant,wsl"

    # Security
    security_opt:
      - no-new-privileges:true

    # Environment Labels
    labels:
      - "cortex.component=database"
      - "cortex.environment=wsl"
      - "cortex.version=1.0.0"
      - "deployment.type=wsl"
      - "cortex.database=qdrant"

# Docker Networks
networks:
  cortex_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1
    labels:
      - "cortex.network=wsl"

# Docker Volumes
volumes:
  qdrant_data:
    driver: local
    labels:
      - "cortex.volume=database"
      - "cortex.environment=wsl"
      - "cortex.database=qdrant"