# =============================================================================
# CORTEX MEMORY MCP SERVER - QDRANT CONFIGURATION
# =============================================================================
# This file contains configuration for the Cortex Memory MCP server.
# The system now uses QDRANT ONLY as the database backend.
# PostgreSQL is no longer used or supported.
# =============================================================================

# =============================================================================
# ⚠️ CRITICAL REQUIREMENT - OPENAI API KEY (MANDATORY)
# =============================================================================
# Cortex Memory MCP will NOT start without a valid OpenAI API key.
# No fallback embedding system is provided.
OPENAI_API_KEY=your-openai-api-key-here

# =============================================================================
# QDRANT VECTOR DATABASE CONFIGURATION
# =============================================================================
# Qdrant is the ONLY database backend used by Cortex Memory MCP
QDRANT_URL=http://localhost:6333
# QDRANT_API_KEY=  # Only set if your Qdrant requires authentication
QDRANT_TIMEOUT=30000
QDRANT_COLLECTION_NAME=cortex-memory

# =============================================================================
# VECTOR EMBEDDING CONFIGURATION
# =============================================================================
# Vector settings for OpenAI embeddings
VECTOR_SIZE=1536  # Must match OpenAI ada-002 model
VECTOR_DISTANCE=Cosine
EMBEDDING_MODEL=text-embedding-ada-002
EMBEDDING_BATCH_SIZE=10

# =============================================================================
# SEARCH CONFIGURATION
# =============================================================================
# Search behavior and limits
SEARCH_LIMIT=50
SEARCH_MODE=auto
ENABLE_CACHE=true
CACHE_TTL=3600
SIMILARITY_THRESHOLD=0.7

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
NODE_ENV=development
LOG_LEVEL=info
PORT=3000

# =============================================================================
# MCP SERVER CONFIGURATION
# =============================================================================
MCP_SERVER_NAME=cortex-memory
MCP_SERVER_VERSION=2.0.0
MCP_TRANSPORT=stdio
MCP_MAX_BATCH_SIZE=100

# =============================================================================
# PERFORMANCE CONFIGURATION
# =============================================================================
DB_MAX_CONNECTIONS=10
DB_CONNECTION_TIMEOUT=30000
API_TIMEOUT=30000
RETRY_ATTEMPTS=3

# =============================================================================
# SCOPE INFERENCE (OPTIONAL)
# =============================================================================
# Project scope information (optional, falls back to git)
# CORTEX_ORG=your_organization_name
# CORTEX_PROJECT=your_project_name
# CORTEX_BRANCH=your_main_branch_name

# =============================================================================
# CONFIGURATION NOTES
# =============================================================================
#
# ⚠️ IMPORTANT CHANGES:
# ❌ REMOVED: All PostgreSQL configuration and dependencies
# ❌ REMOVED: Database migration settings
# ❌ REMOVED: SQL schema management
# ✅ SIMPLIFIED: Only Qdrant vector database required
# ✅ MANDATORY: OpenAI API key required for system startup
#
# ARCHITECTURE:
# - Single database backend (Qdrant only)
# - Vector-based storage and search
# - Automatic schema management
# - No SQL operations or migrations needed
#
# SETUP REQUIREMENTS:
# 1. OpenAI API key (MANDATORY)
# 2. Qdrant running on localhost:6333
# 3. Docker for Qdrant container (recommended)
#
# =============================================================================