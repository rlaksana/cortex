generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// CONSISTENT ARCHITECTURE: PascalCase models + snake_case tables + CUID keys

model Section {
  id           String   @id @default(cuid())
  title        String   @db.VarChar(500)
  content      String?
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  tags         Json     @default("{}")
  metadata     Json     @default("{}")
  created_by   String?  @default("system") @db.VarChar(200)
  updated_by   String?  @default("system") @db.VarChar(200)
  request_id   String?  @db.VarChar(100)
  content_hash String?  @db.VarChar(128)

  @@map("Section")
}

model AdrDecision {
  id                     String    @id @default(cuid())
  component              String    @db.VarChar(200)
  status                 String    @db.VarChar(50)
  title                  String    @db.VarChar(500)
  rationale              String
  alternativesConsidered String[]
  createdAt              DateTime  @default(now()) @map("created_at")
  updatedAt              DateTime  @updatedAt @map("updated_at")
  tags                   Json      @default("{}")
  metadata               Json      @default("{}")
  created_by             String?   @default("system") @db.VarChar(200)
  updated_by             String?   @default("system") @db.VarChar(200)
  request_id             String?   @db.VarChar(100)
  content_hash           String?   @db.VarChar(128)
  accepted_at            DateTime? @db.Timestamptz(6)
  accepted_by            String?   @db.VarChar(200)

  @@index([updatedAt(sort: Desc), createdAt], map: "idx_adr_decision_updated_at_desc")
  @@map("adr_decisions")
}

model IssueLog {
  id           String   @id @default(cuid())
  title        String   @db.VarChar(500)
  description  String?
  status       String   @db.VarChar(50)
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  tags         Json     @default("{}")
  metadata     Json     @default("{}")
  created_by   String?  @default("system") @db.VarChar(200)
  updated_by   String?  @default("system") @db.VarChar(200)
  request_id   String?  @db.VarChar(100)
  content_hash String?  @db.VarChar(128)

  @@index([updatedAt(sort: Desc), createdAt], map: "idx_issue_log_updated_at_desc")
  @@map("issue_logs")
}

model TodoLog {
  id           String    @id @default(cuid())
  title        String    @db.VarChar(500)
  description  String?
  status       String    @db.VarChar(50)
  priority     String?   @db.VarChar(50)
  dueDate      DateTime? @map("due_date")
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")
  tags         Json      @default("{}")
  metadata     Json      @default("{}")
  closedAt     DateTime? @map("closed_at")
  created_by   String?   @default("system") @db.VarChar(200)
  updated_by   String?   @default("system") @db.VarChar(200)
  request_id   String?   @db.VarChar(100)
  content_hash String?   @db.VarChar(128)
  completed_at DateTime? @db.Timestamptz(6)
  completed_by String?   @db.VarChar(200)

  @@index([updatedAt(sort: Desc), createdAt], map: "idx_todo_log_updated_at_desc")
  @@map("todo_logs")
}

model Runbook {
  id          String   @id @default(cuid())
  title       String   @db.VarChar(500)
  description String?
  steps       Json     @default("[]")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  tags        Json     @default("{}")
  metadata    Json     @default("{}")
  created_by  String?  @default("system") @db.VarChar(200)
  updated_by  String?  @default("system") @db.VarChar(200)
  request_id  String?  @db.VarChar(100)
  content_hash String? @db.VarChar(128)

  @@map("runbooks")
}

model ChangeLog {
  id         String   @id @default(cuid())
  changeType String   @map("change_type") @db.VarChar(100)
  subjectRef String   @map("subject_ref") @db.VarChar(200)
  summary    String
  author     String   @db.VarChar(200)
  commitSha  String?  @map("commit_sha") @db.VarChar(100)
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  tags       Json     @default("{}")
  metadata   Json     @default("{}")
  created_by String?  @default("system") @db.VarChar(200)
  updated_by String?  @default("system") @db.VarChar(200)
  request_id String?  @db.VarChar(100)
  content_hash String? @db.VarChar(128)

  @@map("change_logs")
}

model ReleaseNote {
  id        String   @id @default(cuid())
  version   String   @db.VarChar(100)
  summary   String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  tags      Json     @default("{}")
  metadata  Json     @default("{}")
  created_by String? @default("system") @db.VarChar(200)
  updated_by String? @default("system") @db.VarChar(200)
  request_id String? @db.VarChar(100)
  content_hash String? @db.VarChar(128)

  @@map("release_notes")
}

model DdlHistory {
  id          String   @id @default(cuid())
  migrationId String   @map("migration_id") @db.VarChar(200)
  ddlText     String
  checksum    String   @db.VarChar(64)
  appliedAt   DateTime @default(now()) @map("applied_at")
  description String?
  status      String   @default("applied") @db.VarChar(20)
  tags        Json     @default("{}")
  metadata    Json     @default("{}")
  created_by  String?  @default("system") @db.VarChar(200)
  updated_by  String?  @default("system") @db.VarChar(200)
  request_id  String?  @db.VarChar(100)
  content_hash String? @db.VarChar(128)

  @@map("ddl_histories")
}

model PrContext {
  id          String    @id @default(cuid())
  prNumber    Int       @map("pr_number")
  title       String    @db.VarChar(500)
  description String?
  author      String    @db.VarChar(200)
  status      String    @default("open") @db.VarChar(50)
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  tags        Json      @default("{}")
  metadata    Json      @default("{}")
  mergedAt    DateTime? @map("merged_at")
  created_by  String?   @default("system") @db.VarChar(200)
  updated_by  String?   @default("system") @db.VarChar(200)
  request_id  String?   @db.VarChar(100)
  content_hash String?  @db.VarChar(128)

  @@map("pr_contexts")
}

model KnowledgeEntity {
  id         String    @id @default(cuid())
  entityType String    @map("entity_type") @db.VarChar(100)
  name       String    @db.VarChar(500)
  data       Json      @default("{}")
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @updatedAt @map("updated_at")
  tags       Json      @default("{}")
  metadata   Json      @default("{}")
  deletedAt  DateTime? @map("deleted_at")
  created_by String?   @default("system") @db.VarChar(200)
  updated_by String?   @default("system") @db.VarChar(200)
  request_id String?   @db.VarChar(100)
  content_hash String? @db.VarChar(128)

  @@map("knowledge_entities")
}

model KnowledgeRelation {
  id             String    @id @default(cuid())
  fromEntityType String    @map("from_entity_type") @db.VarChar(100)
  fromEntityId   String    @map("from_entity_id")
  toEntityType   String    @map("to_entity_type") @db.VarChar(100)
  toEntityId     String    @map("to_entity_id")
  relationType   String    @map("relation_type") @db.VarChar(100)
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")
  tags           Json      @default("{}")
  metadata       Json      @default("{}")
  deletedAt      DateTime? @map("deleted_at")
  created_by     String?   @default("system") @db.VarChar(200)
  updated_by     String?   @default("system") @db.VarChar(200)
  request_id     String?   @db.VarChar(100)
  content_hash   String?   @db.VarChar(128)

  @@map("knowledge_relations")
}

model KnowledgeObservation {
  id          String    @id @default(cuid())
  entityType  String    @map("entity_type") @db.VarChar(100)
  entityId    String    @map("entity_id")
  observation String
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  tags        Json      @default("{}")
  metadata    Json      @default("{}")
  deletedAt   DateTime? @map("deleted_at")
  created_by  String?   @default("system") @db.VarChar(200)
  updated_by  String?   @default("system") @db.VarChar(200)
  request_id  String?   @db.VarChar(100)
  content_hash String?  @db.VarChar(128)

  @@map("knowledge_observations")
}

model IncidentLog {
  id               String   @id @default(cuid())
  title            String   @db.VarChar(500)
  severity         String   @db.VarChar(20)
  impact           String
  resolutionStatus String   @default("open") @map("resolution_status") @db.VarChar(50)
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @updatedAt @map("updated_at")
  tags             Json     @default("{}")
  metadata         Json     @default("{}")
  created_by       String?  @default("system") @db.VarChar(200)
  updated_by       String?  @default("system") @db.VarChar(200)
  request_id       String?  @db.VarChar(100)
  content_hash     String?  @db.VarChar(128)
  detected_at      DateTime? @db.Timestamptz(6)
  timeline         Json?     @default("[]")
  root_cause_analysis String?
  resolution       String?

  @@map("incident_logs")
}

model ReleaseLog {
  id          String   @id @default(cuid())
  version     String   @db.VarChar(100)
  releaseType String   @map("release_type") @db.VarChar(50)
  scope       String
  status      String   @default("planned") @db.VarChar(50)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  tags        Json     @default("{}")
  metadata    Json     @default("{}")
  created_by  String?  @default("system") @db.VarChar(200)
  updated_by  String?  @default("system") @db.VarChar(200)
  request_id  String?  @db.VarChar(100)
  content_hash String? @db.VarChar(128)
  deployment_date DateTime? @db.Timestamptz(6)
  rollback_plan String?

  @@map("release_logs")
}

model RiskLog {
  id                String   @id @default(cuid())
  title             String   @db.VarChar(500)
  category          String   @db.VarChar(50)
  riskLevel         String   @map("risk_level") @db.VarChar(20)
  impactDescription String   @map("impact_description")
  probability       Decimal? @db.Decimal(3, 2) @default(0.5)
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")
  tags              Json     @default("{}")
  metadata          Json     @default("{}")
  status            String   @default("open") @db.VarChar(50)
  created_by        String?  @default("system") @db.VarChar(200)
  updated_by        String?  @default("system") @db.VarChar(200)
  request_id        String?  @db.VarChar(100)
  content_hash      String?  @db.VarChar(128)
  mitigation_strategies Json? @default("[]")

  @@map("risk_logs")
}

model AssumptionLog {
  id               String   @id @default(cuid())
  title            String   @db.VarChar(500)
  description      String
  category         String   @db.VarChar(50)
  validationStatus String   @default("assumed") @map("validation_status") @db.VarChar(50)
  impactIfInvalid  String   @map("impact_if_invalid")
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @updatedAt @map("updated_at")
  tags             Json     @default("{}")
  metadata         Json     @default("{}")
  created_by       String?  @default("system") @db.VarChar(200)
  updated_by       String?  @default("system") @db.VarChar(200)
  request_id       String?  @db.VarChar(100)
  content_hash     String?  @db.VarChar(128)
  dependencies     Json?     @default("[]")

  @@map("assumption_logs")
}

model PurgeMetadata {
  id                   Int      @id @unique @default(1)
  lastPurgeAt          DateTime @default(now()) @map("last_purge_at")
  operationsSincePurge Int      @default(0) @map("operations_since_purge")
  timeThresholdHours   Int      @default(24) @map("time_threshold_hours")
  operationThreshold   Int      @default(1000) @map("operation_threshold")
  deletedCounts        Json     @default("{}")
  lastDurationMs       Int?     @map("last_duration_ms")
  enabled              Boolean  @default(true)
  createdAt            DateTime @default(now()) @map("created_at")
  updatedAt            DateTime @updatedAt @map("updated_at")

  @@map("purge_metadata")
}

model EventAudit {
  id        String   @id @default(cuid())
  eventType String   @map("event_type") @db.VarChar(100)
  tableName String   @map("table_name") @db.VarChar(100)
  recordId  String   @map("record_id") @db.VarChar(500)
  operation String   @db.VarChar(10)
  oldData   Json?    @map("old_data")
  newData   Json?    @map("new_data")
  changedBy String?  @map("changed_by") @db.VarChar(200)
  tags      Json     @default("{}")
  metadata  Json     @default("{}")
  createdAt DateTime @default(now()) @map("created_at")

  @@map("event_audit")
}