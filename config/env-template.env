# MCP Cortex Memory Environment Configuration Template
# Copy this file to .env and modify the values as needed

# =============================================================================
# VECTOR DATABASE CONNECTION (Qdrant Required)
# =============================================================================
# Choose ONE of the following database connection methods:

# Method 1: Docker Qdrant (Recommended)
QDRANT_URL=http://localhost:6333
QDRANT_COLLECTION=cortex_vectors

# Method 2: External Qdrant (Advanced)
# QDRANT_URL=http://your-qdrant-host:6333
# QDRANT_COLLECTION=your_collection_name

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
LOG_LEVEL=info                    # Options: error, warn, info, debug
NODE_ENV=development             # Options: development, production

# =============================================================================
# MCP SERVER CONFIGURATION
# =============================================================================
MCP_TRANSPORT=stdio               # Options: stdio, http
MCP_SERVER_NAME=cortex-memory
MCP_SERVER_VERSION=1.0.0
MCP_MAX_BATCH_SIZE=100

# =============================================================================
# SCOPE INFERENCE (Optional - falls back to git if not provided)
# =============================================================================
CORTEX_ORG=my-org                # Organization identifier
CORTEX_PROJECT=cortex            # Project name (auto-detected from folder)
CORTEX_BRANCH=main               # Git branch (auto-detected from git)

# =============================================================================
# PERFORMANCE TUNING (Docker Desktop - Higher Memory Usage)
# =============================================================================
QDRANT_TIMEOUT_MS=5000           # Default: 5000 (5 seconds)
QDRANT_MAX_RETRIES=3             # Default: 3
QDRANT_BATCH_SIZE=100            # Default: 100
QDRANT_SEARCH_LIMIT=10           # Default: 10 results
QDRANT_INDEX_THRESHOLD=20000     # Default: 20000 vectors for indexing

# =============================================================================
# PERFORMANCE TUNING (WSL Docker - Lower Memory Usage)
# =============================================================================
# Uncomment these lines for WSL Docker deployment (comment out Docker Desktop settings above)
# QDRANT_TIMEOUT_MS=3000
# QDRANT_MAX_RETRIES=2
# QDRANT_BATCH_SIZE=50
# QDRANT_SEARCH_LIMIT=5
# QDRANT_INDEX_THRESHOLD=10000

# =============================================================================
# ADVANCED CONFIGURATION (Optional)
# =============================================================================
# Enable debug mode for troubleshooting
# DEBUG_MODE=false

# Enable detailed performance metrics
# ENABLE_METRICS=false

# Custom Docker registry (if using private registry)
# DOCKER_REGISTRY=your-registry.com

# Backup retention period (days)
# BACKUP_RETENTION_DAYS=30

# Enable auto-cleanup of old data
# AUTO_CLEANUP_ENABLED=false
# AUTO_CLEANUP_DAYS=90

# =============================================================================
# DEVELOPMENT SETTINGS (Development Only)
# =============================================================================
# Enable hot reload for development (uncomment for development)
# HOT_RELOAD=true

# Development vector database (uncomment for development)
# DEV_QDRANT_URL=http://localhost:6334
# DEV_QDRANT_COLLECTION=cortex_dev_vectors

# Test vector database (uncomment for testing)
# TEST_QDRANT_URL=http://localhost:6335
# TEST_QDRANT_COLLECTION=cortex_test_vectors

# =============================================================================
# SECURITY SETTINGS (Production)
# =============================================================================
# JWT secret for MCP server (generate with: openssl rand -hex 32)
# MCP_JWT_SECRET=your-secret-key-here

# Enable SSL/TLS for MCP server (production only)
# MCP_ENABLE_TLS=false
# MCP_TLS_CERT_PATH=/path/to/cert.pem
# MCP_TLS_KEY_PATH=/path/to/key.pem

# =============================================================================
# MONITORING AND HEALTH CHECKS
# =============================================================================
# Enable health checks
# ENABLE_HEALTH_CHECKS=true

# Health check interval (milliseconds)
# HEALTH_CHECK_INTERVAL=30000

# Metrics collection endpoint
# METRICS_ENDPOINT=/metrics

# =============================================================================
# INTEGRATION SETTINGS
# =============================================================================
# Claude Desktop integration
# CLAUDE_DESKTOP_INTEGRATION=true

# Claude Desktop MCP server path
# CLAUDE_MCP_SERVER_PATH=C:\cortex-memory\dist\index.js

# =============================================================================
# BACKUP AND RESTORE SETTINGS
# =============================================================================
# Backup storage location
# BACKUP_STORAGE_PATH=C:\cortex-memory\backups

# Automatic backup schedule (cron format)
# AUTO_BACKUP_SCHEDULE=0 2 * * *

# Backup compression
# BACKUP_COMPRESSION=true

# =============================================================================
# CUSTOMIZATION (Optional)
# =============================================================================
# Custom application name
# APP_NAME=Cortex Memory

# Application description
# APP_DESCRIPTION=Knowledge management with autonomous decision support

# Custom logo URL
# APP_LOGO_URL=https://your-logo.png

# Custom theme colors
# APP_THEME_PRIMARY_COLOR=#007acc
# APP_THEME_SECONDARY_COLOR=#6c757d